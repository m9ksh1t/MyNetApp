name: Build and Deploy to AKS

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0' # Change to your target version

      # Step 3: Build the application
      - name: Build project
        run: dotnet build --configuration Release -o ./MyNetApp/output

      # Step 4: Publish the artifact
      - name: Publish project
        run: dotnet publish -c Release -o ./MyNetApp/output

      # Step 5: Create Docker image
      - name: Build Docker image
        run: |
          docker build -t bhhelloworld.azurecr.io/myapp:${{ github.sha }} ./MyNetApp

      # Step 6: Log in to ACR
      - name: Log in to Azure Container Registry
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}

      # Step 7: Push image to ACR
      - name: Push Docker image to ACR
        run: docker push bhhelloworld.azurecr.io/myapp:${{ github.sha }}

      # Step 8: Deploy to AKS
      - name: Set up Azure CLI
        uses: azure/cli@v1
        with:
          inlineScript: |
            az aks get-credentials --resource-group myResourceGroup --name myAKSCluster
            kubectl apply -f deployment.yaml

      # Step 9: Deploy to App Service (Optional)
      - name: Deploy to Azure Web App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: my-web-app-service
          slot-name: production
          images: bhhelloworld.azurecr.io/myapp:${{ github.sha }}
