name: Reusable Deployment Workflow
on:
  workflow_call:
    inputs:
      cloud_provider:
        description: 'Target Cloud Provider (Azure or AWS)'
        required: true
        type: string
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Common Steps for Code Checkout and Build
      - name: Checkout Code
        uses: actions/checkout@v3
 
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'
 
      - name: Build project
        run: dotnet build --configuration Release -o ./MyNetApp/output
 
      - name: Publish project
        run: dotnet publish -c Release -o ./MyNetApp/output
      # Common Docker Build Step
      - name: Build Docker Image
        run: |
          docker build -t myapp:${{ github.sha }} ./MyNetApp

      # Login 
      - name: Log in to Azure
        if: ${{ inputs.cloud_provider == 'Azure' }}
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Configure AWS CLI
        if: ${{ inputs.cloud_provider == 'AWS' }}
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
          
      # Push Docker Image to Registry (Conditional for Azure or AWS)
      - name: Push Docker Image
        run: |
          if [[ "${{ inputs.cloud_provider }}" == "Azure" ]]; then
            echo "Pushing image to Azure Container Registry..."
            az acr login --name ${{ secrets.ACR_NAME }}
            docker tag myapp:${{ github.sha }} bhhelloworld.azurecr.io/myapp:${{ github.sha }}
            docker push bhhelloworld.azurecr.io/myapp:${{ github.sha }}
          elif [[ "${{ inputs.cloud_provider }}" == "AWS" ]]; then
            echo "Pushing image to Amazon ECR..."
            aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 994536024037.dkr.ecr.eu-north-1.amazonaws.com
            docker tag myapp:${{ github.sha }} 994536024037.dkr.ecr.eu-north-1.amazonaws.com/myapp:${{ github.sha }}
            docker push 994536024037.dkr.ecr.eu-north-1.amazonaws.com/myapp:${{ github.sha }}
          else
            echo "Invalid cloud provider: ${{ inputs.cloud_provider }}"
          fi
      # Deployment Steps (Separate for Azure and AWS)
      - name: Deploy to Cloud
        run: |
          if [[ "${{ inputs.cloud_provider }}" == "Azure" ]]; then
            echo "Deploying to Azure..."
            az aks install-cli
            az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}
            kubectl set image deployment/myapp-deployment myapp=bhhelloworld.azurecr.io/myapp:${{ github.sha }}
          elif [[ "${{ inputs.cloud_provider }}" == "AWS" ]]; then
            echo "Deploying to AWS..."
            aws eks update-kubeconfig --region eu-north-1 --name my-eks-cluster
            kubectl apply -f deploymentEKS.yml
          else
            echo "Invalid cloud provider: ${{ inputs.cloud_provider }}"
            exit 1
          fi
